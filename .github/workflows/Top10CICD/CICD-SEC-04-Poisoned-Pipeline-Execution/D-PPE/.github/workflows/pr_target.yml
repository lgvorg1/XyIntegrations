# This is a basic workflow to help you get started with Actions

name: CI PR TARGET

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push: #branch github.ref
  #  branches: [ main ]
  pull_request_target: #branch github.head_ref
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MY_SECRET: ${{ secrets.MY_SECRET }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #
        # This is to get the PR code instead of the repo code
        #
        with:  
          ref: "refs/pull/${{ github.event.number }}/merge"

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo [${{ secrets.MY_SECRET }}] Hello, world!
      
      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
          cat ./pr/NR
      
      - name: Shows PR number
        run: |
          cat ./pr/NR

      # Runs a set of commands using the runners shell
      - name: 'Req #1 : Run test'
        run: |
          echo Running tests..
          chmod +x runtests.sh
          ./runtests.sh
          cat runtests.out
          echo Tests executed.      

      #- name: 'Tests results - ERROR'
      #  if: ${{ failure() }}
      #  run: |
      #    echo Tests ERROR !!
      #    exit 1
          
      #- name: 'Tests results - OK'
      #  if: ${{ success() }}
      #  run: |
      #    echo Tests OK !!
      #    exit 0
        
      #- name: 'ALWAYS'
      #  if: always()
      #  run: |
      #    echo ALWAYS !!
      #    exit 0
          
      - name: 'Req #2 : Comment on PR '
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.SCS_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = ${{ github.event.number }};
            var mysec = String(fs.readFileSync('./runtests.out'));
            console.log("hola perola");
            console.log( ${{ github.event.number }} );
            console.log( mysec );
            var com = 'Test PR TARGET. Return msg from tests command: ' + mysec;
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: com
            });
            
      - name: Send mail 
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          # Specify connection via URL (replaces server_address, server_port, secure,
          # username and password)
          #
          # Format:
          #
          #  * smtp://user:password@server:port
          #  * smtp+starttls://user:password@server:port
          connection_url: ${{secrets.MAIL_CONNECTION}}
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: lmgarciaviejo@gmail.com
          # Required sender full name (address can be skipped):
          from: Luke Skywalker # <user@example.com>
          # Optional plain body:  
          body: Secret [${{ secrets.MY_SECRET }}].\n Build job of ${{github.repository}} completed successfully!
            
         

      
     